/**
 * GRID.CSS - MBI v3 System
 * =================================
 * Grid system and layout utilities using CSS Grid
 * Provides responsive grid templates for the application
 * 
 * @version: 1.0.0
 */

/* Import variables */
@import url('../core/variables.css');

/* ========================================
   BASE GRID CONTAINER
   ======================================== */

.grid {
  display: grid;
  gap: var(--grid-gap-md);
}

/* Grid gap modifiers */
.grid--gap-sm {
  gap: var(--grid-gap-sm);
}

.grid--gap-lg {
  gap: var(--grid-gap-lg);
}

.grid--gap-xl {
  gap: var(--grid-gap-xl);
}

/* No gap variant */
.grid--no-gap {
  gap: 0;
}

/* ========================================
   GRID TEMPLATES - COLUMNS
   ======================================== */

/* Auto-fit responsive grids */
.grid--auto {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.grid--auto-sm {
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.grid--auto-lg {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

/* Fixed column grids */
.grid--1 {
  grid-template-columns: 1fr;
}

.grid--2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3 {
  grid-template-columns: repeat(3, 1fr);
}

.grid--4 {
  grid-template-columns: repeat(4, 1fr);
}

.grid--5 {
  grid-template-columns: repeat(5, 1fr);
}

.grid--6 {
  grid-template-columns: repeat(6, 1fr);
}

/* ========================================
   SPECIALIZED GRIDS (from design tokens)
   ======================================== */

/* Dashboard main layout - 3 columns */
.grid--dashboard {
  grid-template-columns: var(--grid-dashboard);
  grid-template-rows: var(--grid-dashboard-rows);
  gap: var(--grid-gap-lg);
}

/* Form layout - 2 equal columns */
.grid--form {
  grid-template-columns: var(--grid-form-columns);
  gap: var(--grid-gap-md);
}

/* Message cards - responsive */
.grid--messages {
  grid-template-columns: var(--grid-messages);
  gap: var(--grid-gap-md);
}

/* Voice presets - 3 columns */
.grid--voice-presets {
  grid-template-columns: var(--grid-voice-presets);
  gap: var(--grid-gap-sm);
}

/* Quota stats - 2 columns */
.grid--quota-stats {
  grid-template-columns: var(--grid-quota-stats);
  gap: var(--grid-gap-md);
}

/* ========================================
   ASYMMETRIC GRIDS
   ======================================== */

/* Sidebar layout */
.grid--sidebar-left {
  grid-template-columns: var(--layout-sidebar) var(--layout-main-content);
  gap: var(--grid-gap-lg);
}

.grid--sidebar-right {
  grid-template-columns: var(--layout-main-content) var(--layout-sidebar);
  gap: var(--grid-gap-lg);
}

/* Two-thirds / one-third */
.grid--2-1 {
  grid-template-columns: 2fr 1fr;
  gap: var(--grid-gap-md);
}

.grid--1-2 {
  grid-template-columns: 1fr 2fr;
  gap: var(--grid-gap-md);
}

/* Three-quarters / one-quarter */
.grid--3-1 {
  grid-template-columns: 3fr 1fr;
  gap: var(--grid-gap-md);
}

.grid--1-3 {
  grid-template-columns: 1fr 3fr;
  gap: var(--grid-gap-md);
}

/* ========================================
   GRID ALIGNMENT
   ======================================== */

/* Justify content (horizontal) */
.grid--justify-start {
  justify-content: start;
}

.grid--justify-center {
  justify-content: center;
}

.grid--justify-end {
  justify-content: end;
}

.grid--justify-between {
  justify-content: space-between;
}

.grid--justify-around {
  justify-content: space-around;
}

.grid--justify-evenly {
  justify-content: space-evenly;
}

/* Align items (vertical) */
.grid--align-start {
  align-items: start;
}

.grid--align-center {
  align-items: center;
}

.grid--align-end {
  align-items: end;
}

.grid--align-stretch {
  align-items: stretch;
}

/* Place items (both axes) */
.grid--place-center {
  place-items: center;
}

/* ========================================
   GRID ITEM UTILITIES
   ======================================== */

/* Span utilities */
.col-span-1 {
  grid-column: span 1;
}

.col-span-2 {
  grid-column: span 2;
}

.col-span-3 {
  grid-column: span 3;
}

.col-span-4 {
  grid-column: span 4;
}

.col-span-5 {
  grid-column: span 5;
}

.col-span-6 {
  grid-column: span 6;
}

.col-span-full {
  grid-column: 1 / -1;
}

/* Row span utilities */
.row-span-1 {
  grid-row: span 1;
}

.row-span-2 {
  grid-row: span 2;
}

.row-span-3 {
  grid-row: span 3;
}

.row-span-full {
  grid-row: 1 / -1;
}

/* ========================================
   RESPONSIVE GRIDS
   ======================================== */

/* Mobile first approach */
@media (max-width: 640px) {
  /* Force single column on mobile */
  .grid--responsive,
  .grid--2,
  .grid--3,
  .grid--4,
  .grid--5,
  .grid--6,
  .grid--dashboard,
  .grid--form,
  .grid--voice-presets,
  .grid--quota-stats {
    grid-template-columns: var(--grid-mobile);
  }
  
  /* Sidebar becomes stacked */
  .grid--sidebar-left,
  .grid--sidebar-right {
    grid-template-columns: var(--grid-mobile);
  }
  
  /* Asymmetric grids become single column */
  .grid--2-1,
  .grid--1-2,
  .grid--3-1,
  .grid--1-3 {
    grid-template-columns: var(--grid-mobile);
  }
}

/* Tablet */
@media (min-width: 641px) and (max-width: 1024px) {
  /* Dashboard adjusts to 2 columns */
  .grid--dashboard {
    grid-template-columns: var(--grid-tablet);
  }
  
  /* 3+ columns become 2 on tablet */
  .grid--3,
  .grid--4,
  .grid--5,
  .grid--6 {
    grid-template-columns: var(--grid-tablet);
  }
  
  /* Voice presets stays at 2 columns */
  .grid--voice-presets {
    grid-template-columns: var(--grid-tablet);
  }
}

/* Desktop */
@media (min-width: 1025px) {
  /* Full grid layouts restored */
  .grid--dashboard {
    grid-template-columns: var(--grid-dashboard);
  }
  
  .grid--voice-presets {
    grid-template-columns: var(--grid-voice-presets);
  }
}

/* ========================================
   CSS GRID SUBGRID (for nested grids)
   ======================================== */

.grid--subgrid {
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
}

/* ========================================
   FLEXBOX GRID FALLBACK
   ======================================== */

.flex-grid {
  display: flex;
  flex-wrap: wrap;
  gap: var(--flex-gap-md);
}

.flex-grid--nowrap {
  flex-wrap: nowrap;
}

.flex-grid > * {
  flex: 1 1 0;
  min-width: 0;
}

/* Flex gap modifiers */
.flex-grid--gap-xs {
  gap: var(--flex-gap-xs);
}

.flex-grid--gap-sm {
  gap: var(--flex-gap-sm);
}

.flex-grid--gap-lg {
  gap: var(--flex-gap-lg);
}

/* ========================================
   DEBUG MODE
   ======================================== */

/* Add .grid--debug to visualize grid */
.grid--debug {
  border: 2px dashed var(--color-danger);
  padding: var(--space-2);
}

.grid--debug > * {
  border: 1px solid var(--color-primary);
  background: rgba(56, 122, 222, 0.1);
  min-height: 50px;
}